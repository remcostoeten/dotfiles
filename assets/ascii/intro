function echo.dotfiles_banner() {
    [[ -n "$DOTFILES_BANNER_SHOWN" ]] && return 0
    export DOTFILES_BANNER_SHOWN=1
    
    # Check sync status before displaying banner
    if declare -f dotfiles_check_sync_status >/dev/null 2>&1; then
        dotfiles_check_sync_status >/dev/null 2>&1
    fi
    
    # Pastel colors (soft, muted palette)
    local pastel_pink='\033[38;5;218m'      # soft pink
    local pastel_blue='\033[38;5;117m'      # soft blue
    local pastel_green='\033[38;5;158m'     # soft green
    local pastel_yellow='\033[38;5;230m'    # soft yellow
    local pastel_purple='\033[38;5;183m'    # soft purple
    local pastel_aqua='\033[38;5;152m'      # soft aqua
    local pastel_orange='\033[38;5;223m'    # soft orange
    local dim_gray='\033[38;5;245m'         # dim text
    local light_fg='\033[38;5;254m'         # light foreground
    
    # Get timestamp in requested format: month-day + time
    local last_update
    if git --no-pager log -1 --format='%ci' 2>/dev/null >/dev/null 2>&1; then
        local git_date=$(git --no-pager log -1 --format='%ci' 2>/dev/null | cut -d' ' -f1,2)
        local month_day=$(echo "$git_date" | cut -d' ' -f1 | cut -d'-' -f2,3 | tr '-' '-')
        local time_part=$(echo "$git_date" | cut -d' ' -f2 | cut -d':' -f1,2 | sed 's/:/:/')
        last_update="${month_day} ${time_part}"
    else
        last_update="n/a"
    fi
    
    echo
    echo -e "${pastel_aqua}╔═══════════════════════════════════════════════════════════╗${NC}"
    echo -e "${pastel_aqua}║${NC}                                                           ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${pastel_orange}██████╗  ${pastel_yellow}██████╗${NC} ${pastel_green}████████╗${NC}${pastel_blue}███████╗${NC}${pastel_purple}██╗${NC}${pastel_pink}██╗     ${NC}${pastel_aqua}███████╗${NC}   ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${pastel_orange}██╔══██╗${NC}${pastel_yellow}██╔═══██╗${NC}${pastel_green}╚══██╔══╝${NC}${pastel_blue}██╔════╝${NC}${pastel_purple}██║${NC}${pastel_pink}██║     ${NC}${pastel_aqua}██╔════╝${NC}   ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${pastel_orange}██║  ██║${NC}${pastel_yellow}██║   ██║${NC}${pastel_green}   ██║   ${NC}${pastel_blue}█████╗  ${NC}${pastel_purple}██║${NC}${pastel_pink}██║     ${NC}${pastel_aqua}█████╗${NC}     ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${pastel_orange}██║  ██║${NC}${pastel_yellow}██║   ██║${NC}${pastel_green}   ██║   ${NC}${pastel_blue}██╔══╝  ${NC}${pastel_purple}██║${NC}${pastel_pink}██║     ${NC}${pastel_aqua}██╔══╝${NC}     ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${pastel_orange}██████╔╝${NC}${pastel_yellow}╚██████╔╝${NC}${pastel_green}   ██║   ${NC}${pastel_blue}██║     ${NC}${pastel_purple}██║${NC}${pastel_pink}███████╗${NC}${pastel_aqua}███████╗${NC}   ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}   ${dim_gray}╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝${NC}   ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}                                                           ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}                    ${light_fg}Remco Stoeten's dotfiles${NC}                    ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}                                                           ${pastel_aqua}║${NC}"
    # Calculate centering for version line
    local version_text="ver. ${DOTFILES_VERSION:-'unknown'} │ last update ${last_update}"
    local text_length=${#version_text}
    local box_width=59  # Total box width minus borders
    local padding=$(( (box_width - text_length) / 2 ))
    local left_spaces=$(printf "%*s" $padding "")
    local right_spaces=$(printf "%*s" $(( box_width - text_length - padding )) "")
    
    echo -e "${pastel_aqua}║${NC}${left_spaces}${pastel_purple}ver. ${DOTFILES_VERSION:-'unknown'}${NC} ${pastel_orange}│${NC} ${pastel_yellow}last update ${last_update}${NC}${right_spaces}${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}║${NC}                                                           ${pastel_aqua}║${NC}"
    echo -e "${pastel_aqua}╚═══════════════════════════════════════════════════════════╝${NC}"
    
    # Display sync warnings if any exist
    if [[ -n "$DOTFILES_SYNC_WARNINGS" ]]; then
        echo
        echo -e "${pastel_orange}⚠${NC} ${pastel_pink}Sync Status Warning:${NC} ${pastel_yellow}${DOTFILES_SYNC_WARNINGS}${NC}"
        echo -e "${dim_gray}   Run ${pastel_blue}dotfiles sync${NC} ${dim_gray}or ${pastel_blue}tour${NC} ${dim_gray}to synchronize${NC}"
    fi
    
    echo
}

alias e.banner='echo.dotfiles_banner'