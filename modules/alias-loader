#!/usr/bin/env bash

# Set DOTFILES_MODULES if not already set
if [[ -z "$DOTFILES_MODULES" ]]; then
    # Try to determine DOTFILES_ROOT
    if [[ -z "$DOTFILES_ROOT" ]]; then
        # Get the directory containing this script (cross-shell compatible)
        if [[ -n "${BASH_SOURCE[0]:-}" ]]; then
            DOTFILES_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd .. && pwd)"
        elif [[ -n "${ZSH_VERSION:-}" ]]; then
            DOTFILES_ROOT="$(cd "$(dirname "${(%):-%x}")" && cd .. && pwd)"
        else
            # Fallback: assume we're in the dotfiles root
            DOTFILES_ROOT="$(cd "$(pwd)/.." && pwd)"
        fi
    fi
    export DOTFILES_MODULES="$DOTFILES_ROOT/modules"
fi

# Fallback functions if core functions aren't loaded yet
if ! command -v echo.debug >/dev/null 2>&1; then
    function echo.debug() {
        [[ "${DOTFILES_DEBUG}" == "1" ]] && echo "DEBUG: $*" >&2 || true
    }
fi

if ! command -v echo.error >/dev/null 2>&1; then
    function echo.error() {
        echo "ERROR: $*" >&2
    }
fi

if ! command -v safe_source >/dev/null 2>&1; then
    function safe_source() {
        local file="$1"
        if [[ -f "$file" ]]; then
            source "$file" || true
        else
            echo.error "File not found: $file"
            return 1
        fi
    }
fi

function load_aliases() {
    local alias_dir="$DOTFILES_MODULES/aliases"
    
    if [[ ! -d "$alias_dir" ]]; then
        echo.debug "No alias directory found at $alias_dir"
        return 0
    fi
    
    echo.debug "Loading aliases..."
    
    local count=0
    local failed=0
    
    for alias_file in "$alias_dir"/*.aliases; do
        [[ ! -f "$alias_file" ]] && continue
        
        local filename=$(basename "$alias_file")
        
        if [[ "$filename" == *.disabled ]]; then
            echo.debug "  ⊗ $filename (disabled)"
            continue
        fi
        
        count=$((count + 1))
        
        if safe_source "$alias_file"; then
            echo.debug "  ✓ $filename"
        else
            failed=$((failed + 1))
            echo.error "  ✗ Failed to load $filename"
        fi
    done
    
    if [[ $count -gt 0 ]]; then
        echo.debug "Loaded $((count - failed))/$count alias files"
    fi
}

function help() {
    if [[ -z "$1" ]]; then
        echo "Available commands:"
        for file in "$DOTFILES_MODULES"/aliases/*.aliases; do
            [[ ! -f "$file" ]] && continue
            echo "--- $(basename "$file" .aliases) ---"
            grep -E '^# @alias' "$file" 2>/dev/null | sed -e 's/# @alias //' -e 's/# @desc /\t/' || true
        done
    else
        for file in "$DOTFILES_MODULES"/aliases/*.aliases; do
            [[ ! -f "$file" ]] && continue
            if grep -q "# @alias $1" "$file" 2>/dev/null; then
                grep -A 1 "# @alias $1" "$file" 2>/dev/null | sed -e 's/# @alias //' -e 's/# @desc /\t/' || true
                return
            fi
        done
        echo "Alias not found: $1"
    fi
}

# Create help alias only if help function exists
if declare -F help >/dev/null 2>&1; then
    alias help=help
fi

load_aliases

# Ensure successful completion
return 0 2>/dev/null || true
