#!/usr/bin/env bash

# Plugin: zsh-enhancements
# Description: Fish-like features for ZSH (autosuggestions, syntax highlighting, better completions)
# Dependencies: zsh, git
# Date: 2024-08-26

function install_zsh_enhancements() {
    echo.debug "Installing ZSH enhancement plugins..."
    
    # Check if git is available
    if ! command -v git &>/dev/null; then
        echo.debug "Git not available - skipping zsh-enhancements installation"
        return 1
    fi
    
    local plugins_dir="$HOME/.local/share/zsh-plugins"
    ensure_dir "$plugins_dir"
    
    # Install zsh-autosuggestions
    if [[ ! -d "$plugins_dir/zsh-autosuggestions" ]]; then
        echo.info "Installing zsh-autosuggestions..."
        git clone https://github.com/zsh-users/zsh-autosuggestions "$plugins_dir/zsh-autosuggestions"
        echo.success "Installed zsh-autosuggestions"
    fi
    
    # Install zsh-syntax-highlighting
    if [[ ! -d "$plugins_dir/zsh-syntax-highlighting" ]]; then
        echo.info "Installing zsh-syntax-highlighting..."
        git clone https://github.com/zsh-users/zsh-syntax-highlighting "$plugins_dir/zsh-syntax-highlighting"
        echo.success "Installed zsh-syntax-highlighting"
    fi
    
    # Install zsh-completions
    if [[ ! -d "$plugins_dir/zsh-completions" ]]; then
        echo.info "Installing zsh-completions..."
        git clone https://github.com/zsh-users/zsh-completions "$plugins_dir/zsh-completions"
        echo.success "Installed zsh-completions"
    fi
    
    # Install fzf-tab for better tab completions
    if [[ ! -d "$plugins_dir/fzf-tab" ]]; then
        echo.info "Installing fzf-tab..."
        git clone https://github.com/Aloxaf/fzf-tab "$plugins_dir/fzf-tab"
        echo.success "Installed fzf-tab"
    fi
    
    echo.success "All ZSH enhancements installed"
}

function configure_zsh_enhancements() {
    if [[ "$DOTFILES_SHELL" != "zsh" ]]; then
        return 0
    fi
    
    # Configure autosuggestions
    export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#585858'
    export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
    export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
    export ZSH_AUTOSUGGEST_USE_ASYNC=1
    
    # Configure syntax highlighting with beautiful colors
    export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
    typeset -A ZSH_HIGHLIGHT_STYLES
    ZSH_HIGHLIGHT_STYLES[command]='fg=magenta,bold'
    ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
    ZSH_HIGHLIGHT_STYLES[builtin]='fg=yellow,bold'
    ZSH_HIGHLIGHT_STYLES[function]='fg=blue,bold'
    ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=red,bold'
    ZSH_HIGHLIGHT_STYLES[redirection]='fg=yellow,bold'
    ZSH_HIGHLIGHT_STYLES[bracket-error]='fg=red,bold'
    ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=cyan,bold'
    ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=green,bold'
    ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=magenta,bold'
    ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]='bg=blue'
    
    # Better history search
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
    bindkey '^P' history-substring-search-up
    bindkey '^N' history-substring-search-down
    
    # Fish-like accept suggestions
    bindkey '^ ' autosuggest-accept
    bindkey '^f' autosuggest-accept
    
    # Enhanced editing
    bindkey '^[[1;5C' forward-word    # Ctrl+Right
    bindkey '^[[1;5D' backward-word   # Ctrl+Left
    bindkey '^H' backward-kill-word   # Ctrl+Backspace
    bindkey '^[[3;5~' kill-word       # Ctrl+Delete
    
    # Configure FZF if available
    if command -v fzf &>/dev/null; then
        export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --color=bg+:#3c4142,bg:#1e2326,spinner:#84a0c6,hl:#719cd6,fg:#ddc7a1,header:#719cd6,info:#7daea3,pointer:#84a0c6,marker:#84a0c6,fg+:#ddc7a1,prompt:#84a0c6,hl+:#719cd6'
        
        if command -v fd &>/dev/null || command -v fdfind &>/dev/null; then
            export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
            export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        elif command -v rg &>/dev/null; then
            export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
            export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        fi
        
        # Load FZF key bindings
        if [[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]]; then
            source /usr/share/doc/fzf/examples/key-bindings.zsh
        elif [[ -f ~/.fzf/shell/key-bindings.zsh ]]; then
            source ~/.fzf/shell/key-bindings.zsh
        fi
        
        # Load FZF completion
        if [[ -f /usr/share/doc/fzf/examples/completion.zsh ]]; then
            source /usr/share/doc/fzf/examples/completion.zsh
        elif [[ -f ~/.fzf/shell/completion.zsh ]]; then
            source ~/.fzf/shell/completion.zsh
        fi
    fi

    # Load secrets into the environment
    if command -v dotfiles-secrets &>/dev/null; then
        eval "$(dotfiles-secrets export)"
    fi
    
    echo.debug "Configured ZSH enhancements with aesthetic improvements"
}

function load_zsh_enhancements() {
    if [[ "$DOTFILES_SHELL" != "zsh" ]]; then
        echo.debug "Not running ZSH, skipping enhancements"
        return 0
    fi
    
    local plugins_dir="$HOME/.local/share/zsh-plugins"
    
    # Load autosuggestions
    if [[ -f "$plugins_dir/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
        source "$plugins_dir/zsh-autosuggestions/zsh-autosuggestions.zsh"
        echo.debug "Loaded zsh-autosuggestions"
    fi
    
    # Load syntax highlighting (must be loaded after all other plugins)
    if [[ -f "$plugins_dir/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
        source "$plugins_dir/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
        echo.debug "Loaded zsh-syntax-highlighting"
    fi
    
    # Load additional completions
    if [[ -d "$plugins_dir/zsh-completions/src" ]]; then
        fpath=("$plugins_dir/zsh-completions/src" $fpath)
        echo.debug "Added zsh-completions to fpath"
    fi
    
    # Load fzf-tab
    if [[ -f "$plugins_dir/fzf-tab/fzf-tab.plugin.zsh" ]]; then
        source "$plugins_dir/fzf-tab/fzf-tab.plugin.zsh"
        echo.debug "Loaded fzf-tab"
    fi
    
    configure_zsh_enhancements
}

# Auto-install if not present
if [[ "$DOTFILES_SHELL" == "zsh" ]]; then
    if [[ ! -d "$HOME/.local/share/zsh-plugins/zsh-autosuggestions" ]]; then
        echo.warning "ZSH enhancements not installed. Installing..."
        install_zsh_enhancements
    fi
    load_zsh_enhancements
fi
