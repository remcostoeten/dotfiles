#!/usr/bin/env bash

# Ensure echo.* helpers are available
if ! declare -f echo.debug >/dev/null 2>&1; then
    source "${DOTFILES_ROOT:-$HOME/.config/dotfiles}/core/_colors" 2>/dev/null || {
        function echo.debug() { [[ "${DOTFILES_DEBUG}" == "1" ]] && echo "[DEBUG] $*" >&2; }
        function echo.error() { echo "[ERROR] $*" >&2; }
        function echo.success() { echo "[SUCCESS] $*"; }
    }
fi

function load_plugins() {
    local plugin_dir="$DOTFILES_MODULES/plugins"
    
    if [[ ! -d "$plugin_dir" ]]; then
        echo.debug "No plugin directory found at $plugin_dir"
        return 0
    fi
    
    echo.debug "Loading plugins..."
    
    local count=0
    local failed=0
    
    for plugin_file in "$plugin_dir"/*; do
        [[ ! -f "$plugin_file" ]] && continue
        
        local filename=$(basename "$plugin_file")
        
        if [[ "$filename" == *.disabled ]]; then
            echo.debug "  ⊗ $filename (disabled)"
            continue
        fi
        
        count=$((count + 1))
        
        if safe_source "$plugin_file"; then
            echo.debug "  ✓ $filename"
        else
            failed=$((failed + 1))
            echo.error "  ✗ Failed to load $filename"
        fi
    done
    
    if [[ $count -gt 0 ]]; then
        echo.debug "Loaded $((count - failed))/$count plugin files"
    fi
    
    load_plugin_configs
}

function load_plugin_configs() {
    if command -v fzf &>/dev/null && [[ -f "$HOME/.fzf.bash" || -f "$HOME/.fzf.zsh" ]]; then
        if [[ "$DOTFILES_SHELL" == "zsh" ]]; then
            safe_source "$HOME/.fzf.zsh" "fzf completions (zsh)"
        else
            safe_source "$HOME/.fzf.bash" "fzf completions (bash)"
        fi
    fi
    
    # Note: zoxide is now handled via the alias loader (zoxide.aliases)
    
    # Note: starship and direnv are initialized in bootstrap to avoid duplication
}

load_plugins
