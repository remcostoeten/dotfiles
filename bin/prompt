#!/usr/bin/env bash

# Source dotfiles colors for echo functions
source "${HOME}/.config/dotfiles/core/_colors" 2>/dev/null || {
    # Fallback functions if colors not available
    function echo.error() { echo "[ERROR] $*"; }
    function echo.success() { echo "[SUCCESS] $*"; }
    function echo.warning() { echo "[WARNING] $*"; }
    function echo.info() { echo "[INFO] $*"; }
    function echo.header() { echo "=== $* ==="; }
    function echo.progress() { echo "[PROGRESS] $*"; }
}

VARIANTS_DIR="$HOME/.config/dotfiles/starship-variants"
STARSHIP_CONFIG="$HOME/.config/starship.toml"
CURRENT_FILE="$VARIANTS_DIR/.current"

function show_help() {
    echo "Starship Prompt Switcher"
    echo
    echo "Usage: prompt [command] [variant]"
    echo
    echo "Commands:"
    echo "  list, ls          List all available variants"
    echo "  current, show     Show current variant"
    echo "  switch <variant>  Switch to specified variant"
    echo "  preview <variant> Preview a variant configuration"
    echo "  reload            Reload starship after switching"
    echo "  help              Show this help"
    echo
    echo "Available variants:"
    for variant in "$VARIANTS_DIR"/*.toml; do
        if [[ -f "$variant" ]]; then
            name=$(basename "$variant" .toml)
            if [[ -f "$CURRENT_FILE" ]] && [[ "$(cat "$CURRENT_FILE")" == "$name" ]]; then
                echo "  $name (current)"
            else
                echo "  $name"
            fi
        fi
    done
}

function list_variants() {
    echo "Available starship prompt variants:"
    echo
    for variant in "$VARIANTS_DIR"/*.toml; do
        if [[ -f "$variant" ]]; then
            name=$(basename "$variant" .toml)
            if [[ -f "$CURRENT_FILE" ]] && [[ "$(cat "$CURRENT_FILE")" == "$name" ]]; then
                echo.success "  ★ $name (current)"
            else
                echo "  • $name"
            fi
        fi
    done
    echo
    echo "Use 'prompt switch <variant>' to change variants"
}

function get_current_variant() {
    if [[ -f "$CURRENT_FILE" ]]; then
        cat "$CURRENT_FILE"
    else
        echo "DEFAULT"
    fi
}

function show_current() {
    current=$(get_current_variant)
    echo.header "Current starship variant: $current"
    
    if [[ -f "$VARIANTS_DIR/$current.toml" ]]; then
        echo
        echo "Preview of current configuration:"
        head -15 "$VARIANTS_DIR/$current.toml"
    fi
}

function switch_variant() {
    local variant="$1"
    
    if [[ -z "$variant" ]]; then
        echo.error "Please specify a variant to switch to"
        echo "Use 'prompt list' to see available variants"
        return 1
    fi
    
    local variant_file="$VARIANTS_DIR/$variant.toml"
    
    if [[ ! -f "$variant_file" ]]; then
        echo.error "Variant '$variant' not found"
        echo "Available variants:"
        list_variants
        return 1
    fi
    
    echo.progress "Switching to variant: $variant"
    
    # Backup current config
    if [[ -f "$STARSHIP_CONFIG" ]]; then
        cp "$STARSHIP_CONFIG" "$STARSHIP_CONFIG.backup.$(date +%s)"
    fi
    
    # Switch to new variant
    cp "$variant_file" "$STARSHIP_CONFIG"
    echo "$variant" > "$CURRENT_FILE"
    
    echo.success "Switched to variant: $variant"
    echo "Reloading starship..."
    
    # Reload starship
    if command -v starship >/dev/null 2>&1; then
        starship init zsh >/dev/null 2>&1 || starship init bash >/dev/null 2>&1
        echo.success "Starship reloaded! Open a new terminal or run 'exec zsh' to see changes."
    else
        echo.warning "Starship not found. Please restart your terminal to see changes."
    fi
}

function preview_variant() {
    local variant="$1"
    
    if [[ -z "$variant" ]]; then
        echo.error "Please specify a variant to preview"
        return 1
    fi
    
    local variant_file="$VARIANTS_DIR/$variant.toml"
    
    if [[ ! -f "$variant_file" ]]; then
        echo.error "Variant '$variant' not found"
        return 1
    fi
    
    echo.header "Preview of variant: $variant"
    echo
    
    # Show format section
    echo.warning "Format configuration:"
    grep -A 20 '^format = ' "$variant_file" | head -20
    echo
    
    # Show color palette
    echo.warning "Color palette:"
    grep -E 'bg:#[0-9a-fA-F]+|fg:#[0-9a-fA-F]+' "$variant_file" | \
        sed 's/.*\(bg:#[0-9a-fA-F]\+\|fg:#[0-9a-fA-F]\+\).*/\1/' | \
        sort -u | head -10
    echo
    
    echo "Use 'prompt switch $variant' to apply this variant"
}

function reload_starship() {
    echo.progress "Reloading starship configuration..."
    if command -v starship >/dev/null 2>&1; then
        exec zsh 2>/dev/null || exec bash 2>/dev/null || echo.warning "Please restart your terminal"
        echo.success "Starship reloaded!"
    else
        echo.error "Starship not found"
    fi
}

function main() {
    case "${1:-help}" in
        "list"|"ls")
            list_variants
            ;;
        "current"|"show")
            show_current
            ;;
        "switch")
            switch_variant "$2"
            ;;
        "preview")
            preview_variant "$2"
            ;;
        "reload")
            reload_starship
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            echo.error "Unknown command: $1"
            echo
            show_help
            return 1
            ;;
    esac
}

main "$@"
