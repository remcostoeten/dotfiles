#!/usr/bin/env fish\n\n# ==============================================================================\n# HELPER FACTORY SYSTEM\n# Standardized helper menu generation for all scripts\n# ==============================================================================\n\n# Global registry for all helpers\nset -g __helper_registry\n\n# Helper factory function - creates standardized helpers\nfunction create_helper\n    set -l script_name $argv[1]\n    set -l title $argv[2]\n    set -l description $argv[3]\n    \n    # Shift to get remaining arguments (sections)\n    set -e argv[1..3]\n    set -l sections $argv\n    \n    # Register this helper\n    set -a __helper_registry $script_name\n    \n    # Create the helper function dynamically\n    eval "\n    function _"$script_name"_help\n        clear\n        echo\n        echo (set_color --bold cyan)\"   $title   \"(set_color normal)\n        echo (set_color yellow)\"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\"(set_color normal)\n        echo\n        echo (set_color --bold white)\" 📖 DESCRIPTION\"(set_color normal)\n        echo (set_color yellow)\"───────────────────────────────────────────────────\"(set_color normal)\n        echo \"  $description\"\n        echo\n        \n        # Render each section\n        for section in \$sections\n            _render_help_section \$section\n        end\n        \n        echo (set_color yellow)\"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\"(set_color normal)\n        echo (set_color --bold white)\" 🔍 HELP: \"(set_color normal)(set_color yellow)\"$script_name --help\"(set_color normal)\", \"(set_color yellow)\"-h\"(set_color normal)\", or \"(set_color yellow)\"--h\"(set_color normal)\n        echo\n    end\n    "\nend\n\n# Function to render help sections\nfunction _render_help_section\n    set -l section_data $argv[1]\n    set -l parts (string split "|" $section_data)\n    set -l section_type $parts[1]\n    set -l section_title $parts[2]\n    \n    echo (set_color --bold white)" 📝 $section_title"(set_color normal)\n    echo (set_color yellow)"───────────────────────────────────────────────────"(set_color normal)\n    \n    switch $section_type\n        case usage\n            echo "  "(set_color green)"$parts[3]"(set_color normal)" "(set_color blue)"$parts[4]"(set_color normal)" "(set_color magenta)"$parts[5]"(set_color normal)\n            \n        case examples\n            set -l example_count (math (count $parts) - 2)\n            set -l i 3\n            while test $i -le (count $parts)\n                set -l example_parts (string split ":" $parts[$i])\n                echo "  "(set_color brblack)"# $example_parts[1]:"(set_color normal)\n                echo "  "(set_color green)"$example_parts[2]"(set_color normal)\n                if test $i -lt (count $parts)\n                    echo\n                end\n                set i (math $i + 1)\n            end\n            \n        case features\n            set -l i 3\n            while test $i -le (count $parts)\n                echo "  "(set_color cyan)"•"(set_color normal)" $parts[$i]"\n                set i (math $i + 1)\n            end\n            \n        case commands\n            set -l i 3\n            while test $i -le (count $parts)\n                set -l cmd_parts (string split ":" $parts[$i])\n                echo "  "(set_color green)"$cmd_parts[1]"(set_color normal)" → $cmd_parts[2]"\n                set i (math $i + 1)\n            end\n            \n        case types\n            set -l i 3\n            while test $i -le (count $parts)\n                set -l type_parts (string split ":" $parts[$i])\n                echo "  "(set_color cyan)"$type_parts[1]"(set_color normal)" → $type_parts[2]"\n                set i (math $i + 1)\n            end\n    end\n    \n    echo\nend\n\n# Function to check if help should be shown\nfunction should_show_help\n    set -l args $argv\n    for arg in $args\n        switch $arg\n